#!/bin/python

import socket
import struct
import binascii
import signal
import sys

def ctrlc_handler(signum, frm):
	sys.exit(0)

signal.signal(signal.SIGINT, ctrlc_handler)

rawSock = socket.socket(socket.PF_PACKET, socket.SOCK_RAW, socket.htons(0x0800))

while 1:
	pkt = rawSock.recvfrom(2048)

	ethernetHeader = pkt[0][0:14]
	eth_hdr = struct.unpack("!6s6s2s", ethernetHeader)
	print "Src MAC addr:  " + binascii.hexlify(eth_hdr[0][0]) + ":" + binascii.hexlify(eth_hdr[0][1]) + ":" + binascii.hexlify(eth_hdr[0][2]) + ":" + binascii.hexlify(eth_hdr[0][3]) + ":" + binascii.hexlify(eth_hdr[0][4]) + ":" + binascii.hexlify(eth_hdr[0][5])
	print "Dest MAC addr: " + binascii.hexlify(eth_hdr[1][0]) + ":" + binascii.hexlify(eth_hdr[1][1]) + ":" + binascii.hexlify(eth_hdr[1][2]) + ":" + binascii.hexlify(eth_hdr[1][3]) + ":" + binascii.hexlify(eth_hdr[1][4]) + ":" + binascii.hexlify(eth_hdr[1][5]) 

	binascii.hexlify(eth_hdr[2])

	ipHeader = pkt[0][14:34]
	ip_hdr = struct.unpack("!12s4s4s", ipHeader)	
	print "Src IP addr:   " + socket.inet_ntoa(ip_hdr[1])
	print "Dest IP addr:  " + socket.inet_ntoa(ip_hdr[2])

	tcpHeader = pkt[0][34:54]
	tcp_hdr = struct.unpack("!HH16s", tcpHeader)
	print "Src port:      " + str(tcp_hdr[0])
	print "Dest port:     " + str(tcp_hdr[1])
	print "\n"

